[{"/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/config.js":"1","/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/App.js":"2","/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/home.jsx":"3","/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/FridgeRoutes.js":"4","/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/fridge.jsx":"5","/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/login.jsx":"6","/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/recipe.jsx":"7"},{"size":515,"mtime":1610550856860,"results":"8","hashOfConfig":"9"},{"size":2023,"mtime":1611065926742,"results":"10","hashOfConfig":"9"},{"size":273,"mtime":1610622389077,"results":"11","hashOfConfig":"9"},{"size":750,"mtime":1611163180688,"results":"12","hashOfConfig":"9"},{"size":4135,"mtime":1611224840601,"results":"13","hashOfConfig":"9"},{"size":303,"mtime":1610546901122,"results":"14","hashOfConfig":"9"},{"size":3065,"mtime":1611163920782,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19v03kr",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/config.js",[],"/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/App.js",["34","35","36"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport * as firebaseui from 'firebaseui';\nimport 'firebaseui/dist/firebaseui.css';\n\nimport {firebaseConfig} from './config';\n\nimport {FridgeRoutes} from './screens/FridgeRoutes';\n\n\nfirebase.initializeApp(firebaseConfig)\n\nconst ui = new firebaseui.auth.AuthUI(firebase.auth());\n\nvar uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n      return true;\n    },\n    uiShown: function() {\n      document.getElementById('loader').style.display = 'none';\n    }\n  },\n  signInFlow: 'popup',\n  signInSuccessUrl: '/',\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n  ],\n  tosUrl: '<your-tos-url>',\n  privacyPolicyUrl: '<your-privacy-policy-url>'\n};\n\nui.start('#firebaseui-auth-container', uiConfig);\n\n\nconst database = firebase.database();\n// const userId = firebase.auth().currentUser.uid;\n\nconst retrieveRecipes = firebase.database().ref('recipes/');\n\nlet recipeDataObj = {};\n\nexport const writeRecipe = (recipeName, ingredients) => {\n  firebase.database().ref('recipes/' + recipeName).set({\n    recipeName: recipeName,\n    ingredients: ingredients,\n  });\n}\n\nwriteRecipe('Risotto', 'risotto rice')\nwriteRecipe('Tuna Pasta', ['tuna', 'pasta', 'tomatoes'])\nwriteRecipe('Spaghetti Bolognaise', ['mince', 'tomatoes', 'onions', 'pasta'])\nwriteRecipe('Fish Pie', 'fish')\n\nconst App = () => {\n  const [data, setData] = useState();\n\n  async function getTheData() {\n    try {\n      await retrieveRecipes.once('value', (snapshot) => {\n        const recipeData = snapshot.val();\n        setData(recipeData);\n      });\n    } catch (e) {\n      console.log('error', e);\n    } \n  }\n\n  useEffect(() => {\n    if (data === undefined) {\n      getTheData()\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome to My Awesome App</h1>\n      <FridgeRoutes data={data}/>\n    </div>\n  );\n}\n\nexport default App;\n",["37","38"],"/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/home.jsx",[],"/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/FridgeRoutes.js",["39","40","41"],"import React, {useEffect, useState} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nimport {Home} from './home';\nimport {Login} from './login';\nimport {Fridge} from './fridge';\nimport {Recipe} from './recipe';\n\nexport const FridgeRoutes = (data) => {    \n\n    return (\n        <Router>\n        <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/fridge\">\n              <Fridge data={data}/>\n            </Route>\n            <Route path=\"/recipe\">\n              <Recipe data={data}/>\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n    )\n}","/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/fridge.jsx",["42","43","44","45","46","47","48","49"],"/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/login.jsx",[],"/Users/davies2_charlotte/CharlotteMD/beach-time/recipes/src/screens/recipe.jsx",["50","51","52","53","54","55"],"import React, {useEffect, useState} from 'react';\nimport autocomplete from 'autocompleter';\n\nimport {useForm} from 'react-hook-form';\n\nexport const Recipe = (data) => {\n    const [fridgeData, setFridgeData] = useState();\n    const [completeIngredientsList, setCompleteIngredientsList] = useState();\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    function getIngredients() {\n        let allRecipeIngredients = [];\n        Object.keys(fridgeData).map(function(key) {\n            const recipeIngredients = fridgeData[key].ingredients;\n            let howMany = Array.isArray(recipeIngredients);\n\n            if (howMany) {\n                recipeIngredients.map(ingredients => {\n                    allRecipeIngredients.push(ingredients)\n                })\n            } else {\n                allRecipeIngredients.push(recipeIngredients);\n            }\n            const noDuplicates = allRecipeIngredients.reduce(function(a,b){if(a.indexOf(b)<0)a.push(b);return a;},[]);\n            setCompleteIngredientsList(noDuplicates);\n          })\n    }\n\n    const onSubmit = formData => {\n        console.log(formData);\n    }\n\n    // let input = document.getElementById(\"ingredients\");\n    \n    // autocomplete({\n    //     input: document.getElementById(\"ingredients\"),\n    //     fetch: function(text, update) {\n    //         text = text.toLowerCase();\n    //         const existingIngredients = completeIngredientsList.filter(n => n.label.toLowerCase().startsWith(text))\n    //         update(existingIngredients);\n    //     },\n    //     onSelect: function(item) {\n    //         document.getElementById(\"ingredients\").value = item.label;\n    //     }\n    // });\n\n    var countries = [\n        { label: 'United Kingdom', value: 'UK' },\n        { label: 'United States', value: 'US' }\n    ];\n    \n    var input = document.getElementById(\"country\");\n    \n    autocomplete({\n        input: input,\n        fetch: function(text, update) {\n            text = text.toLowerCase();\n            // you can also use AJAX requests instead of preloaded data\n            var suggestions = countries.filter(n => n.label.toLowerCase().startsWith(text))\n            update(suggestions);\n        },\n        onSelect: function(item) {\n            input.value = item.label;\n        }\n    });\n\n    useEffect(() => {\n        if (data) {\n          setFridgeData(data.data.data)\n        }\n      }, [data])\n\n    useEffect(() => {\n        if (fridgeData) {\n            getIngredients()\n        }\n    }, [fridgeData])\n\n    return (\n        <>\n            <h2>Add a new recipe</h2>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor='recipeName'>Recipe Name:</label> \n                <input type=\"text\" id='recipeName' name='recipeName' ref={register}/>\n                <label htmlFor='ingredients'>Ingredients:</label> \n                <input type=\"text\" id='ingredients' name='ingredients' ref={register}/>\n                <button type=\"submit\">Create</button>\n\n                <input id='country'/>\n            </form>\n        </>\n    )\n};",{"ruleId":"56","severity":1,"message":"57","line":40,"column":7,"nodeType":"58","messageId":"59","endLine":40,"endColumn":15},{"ruleId":"56","severity":1,"message":"60","line":45,"column":5,"nodeType":"58","messageId":"59","endLine":45,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":77,"column":6,"nodeType":"63","endLine":77,"endColumn":8,"suggestions":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"56","severity":1,"message":"69","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"70","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":35},{"ruleId":"56","severity":1,"message":"71","line":6,"column":5,"nodeType":"58","messageId":"59","endLine":6,"endColumn":9},{"ruleId":"56","severity":1,"message":"72","line":10,"column":12,"nodeType":"58","messageId":"59","endLine":10,"endColumn":32},{"ruleId":"56","severity":1,"message":"73","line":13,"column":37,"nodeType":"58","messageId":"59","endLine":13,"endColumn":42},{"ruleId":"56","severity":1,"message":"74","line":13,"column":44,"nodeType":"58","messageId":"59","endLine":13,"endColumn":50},{"ruleId":"75","severity":1,"message":"76","line":19,"column":37,"nodeType":"77","messageId":"78","endLine":19,"endColumn":45},{"ruleId":"75","severity":1,"message":"79","line":24,"column":61,"nodeType":"80","messageId":"78","endLine":24,"endColumn":63},{"ruleId":"75","severity":1,"message":"76","line":48,"column":37,"nodeType":"77","messageId":"78","endLine":48,"endColumn":45},{"ruleId":"75","severity":1,"message":"79","line":53,"column":51,"nodeType":"80","messageId":"78","endLine":53,"endColumn":53},{"ruleId":"61","severity":1,"message":"81","line":76,"column":8,"nodeType":"63","endLine":76,"endColumn":20,"suggestions":"82"},{"ruleId":"56","severity":1,"message":"83","line":8,"column":12,"nodeType":"58","messageId":"59","endLine":8,"endColumn":35},{"ruleId":"56","severity":1,"message":"73","line":9,"column":37,"nodeType":"58","messageId":"59","endLine":9,"endColumn":42},{"ruleId":"56","severity":1,"message":"74","line":9,"column":44,"nodeType":"58","messageId":"59","endLine":9,"endColumn":50},{"ruleId":"75","severity":1,"message":"76","line":13,"column":37,"nodeType":"77","messageId":"78","endLine":13,"endColumn":45},{"ruleId":"75","severity":1,"message":"79","line":18,"column":51,"nodeType":"80","messageId":"78","endLine":18,"endColumn":53},{"ruleId":"61","severity":1,"message":"81","line":77,"column":8,"nodeType":"63","endLine":77,"endColumn":20,"suggestions":"84"},"no-unused-vars","'database' is assigned a value but never used.","Identifier","unusedVar","'recipeDataObj' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["85"],"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'availableIngredients' is assigned a value but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getIngredients'. Either include it or remove the dependency array.",["88"],"'completeIngredientsList' is assigned a value but never used.",["89"],{"desc":"90","fix":"91"},"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"92","fix":"94"},"Update the dependencies array to be: [data]",{"range":"95","text":"96"},"Update the dependencies array to be: [fridgeData, getIngredients]",{"range":"97","text":"98"},{"range":"99","text":"98"},[1867,1869],"[data]",[2557,2569],"[fridgeData, getIngredients]",[2495,2507]]